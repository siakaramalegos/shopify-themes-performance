---
layout: base.njk
title: All Themes Performance Data | Theme Vitals
description: Compare all popular Shopify themes in terms of Core Web Vitals performance and market share and rank.
---

<div class="banner">
  <div class="content flow">
    <h1>All themes</h1>
    <p class="lead">Showing data for {{ dataDate }}.</p>
    <p>Select a theme name to see more data.</p>
  </div>
</div>

<div class="content flow">
  <div class="flex-container">
    <div class="table-actions">
      <span class="sorting">
        Sort by:
        <button id="sort-alpha" class="sort" role="switch" aria-checked="true">Name</button>|
        <button id="sort-rank" class="sort" role="switch">Rank</button>|
        <button id="sort-cwv" class="sort" role="switch">Passing CWV</button>
      </span>
      <div>
        <button id="mobile-switch" class="client-switch" role="switch" aria-checked="true">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512" width="12" height="12"><path fill="currentColor" d="M16 64C16 28.7 44.7 0 80 0L304 0c35.3 0 64 28.7 64 64l0 384c0 35.3-28.7 64-64 64L80 512c-35.3 0-64-28.7-64-64L16 64zM224 448a32 32 0 1 0 -64 0 32 32 0 1 0 64 0zM304 64L80 64l0 320 224 0 0-320z"/></svg>
          Mobile
        </button>
        <button id="desktop-switch" class="client-switch" role="switch" aria-checked="false">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512" width="12" height="12"><path fill="currentColor" d="M64 0C28.7 0 0 28.7 0 64L0 352c0 35.3 28.7 64 64 64l176 0-10.7 32L160 448c-17.7 0-32 14.3-32 32s14.3 32 32 32l256 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-69.3 0L336 416l176 0c35.3 0 64-28.7 64-64l0-288c0-35.3-28.7-64-64-64L64 0zM512 64l0 224L64 288 64 64l448 0z"/></svg>
          Desktop
        </button>
      </div>
    </div>

    <table>
      <thead>
        <tr>
          <th>Theme</th>
          <th>
            <button type="button" aria-label="more info" data-toggletip-content="The rank in market share only for the websites included in the Chrome User Experience Report. See FAQ.">Est. Market Rank</button>
            <span role="status"></span>
            <br><small>(share)</small></th>
          <th>
            <button type="button" aria-label="more info" data-toggletip-content="The Core Web Vitals (CWV) are LCP, CLS, and INP.">Origins passing all CWV</button>
            <span role="status"></span>
            <br><small>(trend)</small></th>
          <th class="hide-mobile">
            <button type="button" aria-label="more info" data-toggletip-content="Largest Contentful Paint (LCP) measures loading speed of the largest element in the viewport.">Origins with good LCP</button>
            <span role="status"></span>
            <br><small>(trend)</small>
          </th>
          <th class="hide-mobile">
            <button type="button" aria-label="more info" data-toggletip-content="Cumulative Layout Shift (CLS) measures how much the page or layout moved unexpectedly.">Origins with good CLS</button>
            <span role="status"></span>
            <br><small>(trend)</small>
          </th>
          <th class="hide-mobile">
            <button type="button" aria-label="more info" data-toggletip-content="Interaction to Next Paint (INP) measures how quickly the page responds to user input.">Origins with good INP</button>
            <span role="status"></span>
            <br><small>(trend)</small>
          </th>
        </tr>
      </thead>
      <tbody id="tbody-mobile">
        {% set sortedThemes = themes | sortThemes %}
        {% for theme in sortedThemes %}
          <tr
            data-market-rank="{{ theme.summary.mobile.marketRank }}"
            data-cwv-rank="{{ theme.summary.mobile.cwvRank }}"
            data-alpha-rank="{{ loop.index }}">
            <td><a href="/themes/{{ theme.slug }}">{{ theme.name }}</a> {% if theme.sunset %}<span class="pill">vintage</span>{% endif %}</td>
            <td>{{ theme.summary.mobile.marketRank }} <small>({{ theme.summary.mobile.marketSharePct }}%)</small></td>
            <td>
              <div>
                {{ theme.summary.mobile.passingCWVchart | safe }}
                {{ theme.summary.mobile.passingCWV }}%
                <span class="pill {{ theme.summary.mobile.cwvTrend }}"></span>
              </div>
            </td>
            <td class="hide-mobile"><div>{{ theme.summary.mobile.passingLCP }}% <span class="pill {{ theme.summary.mobile.lcpTrend }}"></span></div></td>
            <td class="hide-mobile"><div>{{ theme.summary.mobile.passingCLS }}% <span class="pill {{ theme.summary.mobile.clsTrend }}"></span></div></td>
            <td class="hide-mobile"><div>{{ theme.summary.mobile.passingINP }}% <span class="pill {{ theme.summary.mobile.inpTrend }}"></span></div></td>
          </tr>
        {% endfor %}
      </tbody>
      <tbody id="tbody-desktop" hidden>
        {% for theme in sortedThemes %}
          <tr
            data-market-rank="{{ theme.summary.desktop.marketRank }}"
            data-cwv-rank="{{ theme.summary.desktop.cwvRank }}"
            data-alpha-rank="{{ loop.index }}">
            <td><a href="/themes/{{ theme.slug }}">{{ theme.name }}</a> {% if theme.sunset %}<span class="pill">vintage</span>{% endif %}</td>
            <td>{{ theme.summary.desktop.marketRank }} ({{ theme.summary.desktop.marketSharePct }}%)</td>
            <td>
              <div>
                {{ theme.summary.desktop.passingCWVchart | safe }}
                {{ theme.summary.desktop.passingCWV }}%
                <span class="pill {{ theme.summary.desktop.cwvTrend }}"></span>
              </div>
            </td>
            <td class="hide-mobile"><div>{{ theme.summary.desktop.passingLCP }}% <span class="pill {{ theme.summary.desktop.lcpTrend }}"></span></div></td>
            <td class="hide-mobile"><div>{{ theme.summary.desktop.passingCLS }}% <span class="pill {{ theme.summary.desktop.clsTrend }}"></span></div></td>
            <td class="hide-mobile"><div>{{ theme.summary.desktop.passingINP }}% <span class="pill {{ theme.summary.desktop.inpTrend }}"></span></div></td>
          </tr>
        {% endfor %}
      </tbody>
    </table>
  </div>
</div>

<script>
  // Desktop/mobile switch
  const buttonMobile = document.querySelector("#mobile-switch")
  const buttonDesktop = document.querySelector("#desktop-switch")
  const tbodyMobile = document.querySelector("#tbody-mobile")
  const tbodyDesktop = document.querySelector("#tbody-desktop")

  buttonMobile.addEventListener("click", e => {
    tbodyMobile.hidden = false
    tbodyDesktop.hidden = true
    buttonMobile.setAttribute("aria-checked", true)
    buttonDesktop.setAttribute("aria-checked", false)
  })
  buttonDesktop.addEventListener("click", e => {
    tbodyMobile.hidden = true
    tbodyDesktop.hidden = false
    buttonMobile.setAttribute("aria-checked", false)
    buttonDesktop.setAttribute("aria-checked", true)
  })

  // Sorting
  const CLIENTS = ['mobile', 'desktop']
  const buttonSortAlpha = document.querySelector("#sort-alpha")
  const buttonSortMarket = document.querySelector("#sort-rank")
  const buttonSortCWV = document.querySelector("#sort-cwv")

  // By market rank
  buttonSortMarket.addEventListener("click", e => {
    buttonSortMarket.setAttribute("aria-checked", true)
    buttonSortCWV.setAttribute("aria-checked", false)
    buttonSortAlpha.setAttribute("aria-checked", false)

    CLIENTS.forEach(client => {
      const fragment = document.createDocumentFragment();
      const sorted = [...document.querySelectorAll(`#tbody-${client} tr`)].sort((a,b) => {
        return a.dataset.marketRank - b.dataset.marketRank;
      });

      sorted.forEach((elem) => {
        fragment.appendChild(elem);
      });

      document.querySelector(`#tbody-${client}`).appendChild(fragment);
    })
  })

  // By CWV rank
  buttonSortCWV.addEventListener("click", e => {
    buttonSortCWV.setAttribute("aria-checked", true)
    buttonSortMarket.setAttribute("aria-checked", false)
    buttonSortAlpha.setAttribute("aria-checked", false)

    CLIENTS.forEach(client => {
      const fragment = document.createDocumentFragment();
      const sorted = [...document.querySelectorAll(`#tbody-${client} tr`)].sort((a,b) => {
        return a.dataset.cwvRank - b.dataset.cwvRank;
      });

      sorted.forEach((elem) => {
        fragment.appendChild(elem);
      });

      document.querySelector(`#tbody-${client}`).appendChild(fragment);
    })
  })

  // By alpha
  buttonSortAlpha.addEventListener("click", e => {
    buttonSortAlpha.setAttribute("aria-checked", true)
    buttonSortCWV.setAttribute("aria-checked", false)
    buttonSortMarket.setAttribute("aria-checked", false)

    CLIENTS.forEach(client => {
      const fragment = document.createDocumentFragment();
      const sorted = [...document.querySelectorAll(`#tbody-${client} tr`)].sort((a,b) => {
        return a.dataset.alphaRank - b.dataset.alphaRank;
      });

      sorted.forEach((elem) => {
        fragment.appendChild(elem);
      });

      document.querySelector(`#tbody-${client}`).appendChild(fragment);
    })
  })

  // Toggle tips (tooltips)
  // Get all the toggletip buttons
  const toggleTips = document.querySelectorAll('[data-toggletip-content]');

  // Iterate over them
  toggleTips.forEach(tip => {
    const message = tip.dataset.toggletipContent
    const liveRegion = tip.nextElementSibling;

    tip.addEventListener('click', () => {
      console.log({message, liveRegion});

      liveRegion.innerHTML = '';
      window.setTimeout(() => {
        liveRegion.innerHTML = `<span class="toggletip-bubble">${message}</span>`;
      }, 100);
    })

    // Close on click outsite tip
    document.addEventListener('click', (e) => {
      if (tip !== e.target) {
        liveRegion.innerHTML = '';
      }
    });

    // Close on Esc
    tip.addEventListener('keydown', (e) => {
      if ((e.keyCode || e.which) === 27) {
        liveRegion.innerHTML = '';
      }
    });

    // Close on blur
    tip.addEventListener('blur', (e) => {
      liveRegion.innerHTML = '';
    });

  })
</script>
